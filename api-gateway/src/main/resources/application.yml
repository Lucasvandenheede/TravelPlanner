server:
  port: 8085

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: INFO
    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
    reactor.netty: INFO
    org.springframework.security: TRACE

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENTID}
            client-secret: ${GOOGLE_CLIENTSECRET}
            scope: openid,profile,email
      resourceserver:
        jwt:
          issuer-uri: https://accounts.google.com
          jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
  cloud:
    gateway:
      routes:
    # Booking
        # Create
        - id: booking-service
          uri: http://${BOOKING_SERVICE_BASEURL:localhost:8081}
          predicates:
            - Path=/api/booking
            - Method=POST
          filters:
            - SetPath=/api/booking
        # Show All
        - id: booking-service-all
          uri: http://${BOOKING_SERVICE_BASEURL:localhost:8081}
          predicates:
            - Path=/api/booking/all
            - Method=GET
          filters:
                - SetPath=/api/booking/all
        # Get by ID
        - id: booking-service-id
          uri: http://${BOOKING_SERVICE_BASEURL:localhost:8081}
          predicates:
            - Path=/api/booking/{id}
            - Method=GET
          filters:
            - SetPath=/api/booking/{id}
        # Update by ID
        - id: booking-service-id
          uri: http://${BOOKING_SERVICE_BASEURL:localhost:8081}
          predicates:
            - Path=/api/booking/{id}
            - Method=PUT
          filters:
            - SetPath=/api/booking/{id}
        # Delete by ID
        - id: booking-service-delete-id
          uri: http://${BOOKING_SERVICE_BASEURL:localhost:8081}
          predicates:
            - Path=/api/booking/{id}
            - Method=DELETE
          filters:
            - SetPath=/api/booking/{id}

    # Place
        - id: place-service-all
          uri: http://${PLACE_SERVICE_BASEURL:localhost:8080}
          predicates:
            - Path=/api/place/all
          filters:
            - SetPath=/api/place/all

    # Travel
        - id: travel-service-all
          uri: http://${TRAVEL_SERVICE_BASEURL:localhost:8083}
          predicates:
            - Path=/api/travel/all
          filters:
            - SetPath=/api/travel/all

    # Weather
        - id: weather-service-all
          uri: http://${WEATHER_SERVICE_BASEURL:localhost:8084}
          predicates:
            - Path=/api/weather/all
          filters:
            - SetPath=/api/weather/all